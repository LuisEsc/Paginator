{"name":"Paginator","tagline":"Paginator is a simple class that allows you to create pagination. It doesn't require any database connection.","body":"# Paginator 2.x.x\r\n\r\n#### A paginator that makes it easy and simple\r\n\r\n---\r\n \r\nName: [Paginator](http://github.com/mardix/Paginator)\r\n\r\nLicense: MIT\r\n\r\nAuthor: [Mardix](http://github.com/mardix)\r\n\r\nVersion : 2.x.x\r\n\r\nRequirements: PHP >= 5.4\r\n\r\n---\r\n\r\n\r\n## About Paginator\r\n\r\nPaginator is a simple class that allows you to create pagination for your application. \r\nIt doesn't require any database connection. It only requires the total of items found \r\nand from there it will create a pagination that can be export to HTML or Array. \r\nIt is also compatible with Twitter's Bootstrap Framework.\r\n\r\n---\r\n\r\n## Install Paginator\r\n\r\nYou can just download Paginator as is, or with Composer. \r\n\r\nTo install with composer, add the following in the require key in your **composer.json** file\r\n\r\n\t\"voodoophp/paginator\": \"2.*\"\r\n\r\ncomposer.json\r\n\r\n\t{\r\n\t    \"name\": \"voodoophp/myapp\",\r\n\t    \"description\": \"My awesome Voodoo App\",\r\n\t    \"require\": {\r\n\t        \"voodoophp/paginator\": \"2.*\"\r\n\t    }\r\n\t}\r\n\r\n\r\n---\r\n\r\n### Create a Pagination\r\n\r\nPaginator makes it easy to create pagination. It only requires the URL that contains the page number pattern, the total items, and the total of items per page. \r\n\r\n\thttp://site.com/search?q=flower&page=15\r\n\r\nor\r\n\r\n\thttp://site.com/genres/pop/page/15\r\n\t\r\n\t\r\nPaginator will automatically match the page number with the url above, and create pagination for the rest of the pages based on the total items and items per page provided.\r\n\r\n\r\n### Catching the page number\r\n \r\nPaginator requires the keyword **(:num)** in the page number pattern to match the page number in the URL. \r\n\r\nPage number pattern are set in the following format\r\n\r\nFor friendly URL, it will capture http://site.com/page/25\r\n\r\n\t/page/(:num)\r\n\r\n\r\nFor normal URL, it will capture http://site.com/?page=25\r\n\r\n\tpage=(:num)\r\n\t\r\n\r\nPage number pattern is set in \r\n\t\r\n\tVoodoo\\Paginator::setUrl($url, $pagePattern);\r\n\r\n\r\n\t\r\nOn both examples it will catch the page number [**25**] and create from there the start and the end of the pagination.\r\n\r\nAny variation of the page number pattern is OK, as long as it includes **(:num)** \r\n\r\n\r\n\r\n### A Simple Example\r\n\r\n\r\n\t<?php\r\n\t\r\n\tinclude \"src/Voodoo/Paginator.php\";\r\n\r\n\t// Pretending the the request url is: \r\n\t// http://mysite.com.com/hip-hop/page/5\r\n\t\r\n\t// to catch the page number pattern in the request url\r\n\t$pagePattern = \"/page/(:num)\"; \r\n\r\n\t// Some pre-calculated number\r\n\t$totalItems = 150; \r\n\r\n\t// Total items to show per page\r\n\t$totalPerPage = 10; \r\n\t\r\n\t$paginator = (new Voodoo\\Paginator($pagePattern))\r\n\t                ->setItems($totalItems, $totalPerPage);\r\n\t?>\r\n\t\r\n\t<html>\r\n\t    <head>\r\n\t        <link rel=\"stylesheet\" href=\"./assets/paginator.css\">\r\n\t        <title>Paginator Example</title>\r\n\t    </head>\r\n\t    \r\n\t    <body>\r\n\t        <?= $paginator; ?>\r\n\t    </body>\r\n\t</html>\r\n\r\nWill  render something like this:\r\n\r\n\t[First] [<< Prev] [1] [2] [3] [4] [5] [6] [Next >>] [Last]\r\n\t\r\nWith links that look like: \r\n\r\n\t<a href='http://mysite.com/hip-hop/page/6'>6</a>\r\n\r\n\r\n---\r\n### Methods \r\n\r\n---\r\n\r\n\r\n\r\n####Voodoo\\Paginator::__construct()\r\n\t<?php\r\n\t\r\n\tinclude \"src/Voodoo/Paginator.php\";\r\n\t\r\n\t$paginator = new Voodoo\\Paginator;\r\n\t\r\n\r\n---\r\n####Voodoo\\Paginator::setUrl()\r\nTo set the url and the  page number pattern\r\n\r\n\t<?php\r\n\t\r\n\tinclude \"src/Voodoo/Paginator.php\";\r\n\t\r\n\t$url = \"http://mysite.com\";\r\n\t$pagePattern = \"/page/(:num)\";\r\n\t\r\n\t$paginator = (new Voodoo\\Paginator)\r\n\t                ->setUrl($url, $pagePattern);\r\n\r\n\r\n##### Alternative with the URL being set automatically\r\n\r\nPaginator will set the URL automatically based on the request URI if setUrl() is not called. All the paginations will be based on the current url. \r\n\r\nIn the example below, the __construct() accepts the pagePattern and  create the pagination url from the getUri();\r\n\r\n\t<?php\r\n\t\r\n\tinclude \"src/Voodoo/Paginator.php\";\r\n\t\r\n\t$pagePattern = \"/page/(:num)\";\r\n\r\n\t$paginator = (new Voodoo\\Paginator($pagePattern));\r\n\t\r\n---\r\n\t                \r\n####Voodoo\\Paginator::setItems()\r\nTo set the items, total items per page, and the pagination navigation size\r\n\r\n\t<?php\r\n\t\r\n\tinclude \"src/Voodoo/Paginator.php\";\r\n\t\r\n\t$url = \"http://mysite.com\";\r\n\t$pagePattern = \"/page/(:num)\";\r\n\t$totalItems = 150;\r\n\t$totalPerPage = 10;\r\n\t\r\n\t$paginator = (new Voodoo\\Paginator)\r\n\t                ->setUrl($url, $pagePattern)\r\n\t                ->setItems($totalItems, $totalPerPage);\r\n\t \r\n---\r\n\r\n####Voodoo\\Paginator::setPage()\r\n\r\nBy default, Paginator will catch the page number from the URL, but if you want to set the current page manually, setPage let you do so\r\n\r\n\t<?php\r\n\t\r\n\tinclude \"src/Voodoo/Paginator.php\";\r\n\t\r\n\t$url = \"http://mysite.com\";\r\n\t$pagePattern = \"/page/(:num)\";\r\n\t$totalItems = 150;\r\n\t$totalPerPage = 10;\r\n\t\r\n\t$paginator = (new Voodoo\\Paginator)\r\n\t                ->setUrl($url, $pagePattern)\r\n\t                ->setItems($totalItems, $totalPerPage)\r\n\t                ->setPage(4);\r\n\t                \r\n---\t\r\n\r\n####Voodoo\\Paginator::setPrevNextTitle()\r\n\r\nTo set the Prev and Next title when the pagination is long.\r\nBy default it is set to **Prev** and **Next**\r\n\r\n\t<?php\r\n\t\r\n\tinclude \"src/Voodoo/Paginator.php\";\r\n\t\r\n\t$url = \"http://mysite.com\";\r\n\t$pagePattern = \"/page/(:num)\";\r\n\t$totalItems = 150;\r\n\t$totalPerPage = 10;\r\n\t\r\n\t$paginator = (new Voodoo\\Paginator)\r\n\t                ->setUrl($url, $pagePattern)\r\n\t                ->setItems($totalItems, $totalPerPage)\r\n\t                ->setPage(4)\r\n\t                ->setPrevNextTitle(\"Prev\",\t\"Next\");\r\n\t \r\n---\r\n\r\n####Voodoo\\Paginator::setFirstLastTitle()\r\n\r\nTo set the First and Last title when the pagination is long.\r\nBy default it is set to **First** and **Last**\r\n\r\n\t<?php\r\n\t\r\n\tinclude \"src/Voodoo/Paginator.php\";\r\n\t\r\n\t$url = \"http://mysite.com\";\r\n\t$pagePattern = \"/page/(:num)\";\r\n\t$totalItems = 150;\r\n\t$totalPerPage = 10;\r\n\t\r\n\t$paginator = (new Voodoo\\Paginator)\r\n\t                ->setUrl($url, $pagePattern)\r\n\t                ->setItems($totalItems, $totalPerPage)\r\n\t                ->setPage(4)\r\n\t                ->setPrevNextTitle(\"Prev\",\t\"Next\")\r\n\t                ->setFirstLastTitle(\"First\", \"Last\");\r\n\t                \r\n---\r\n\t                \r\n####Array Voodoo\\Paginator::toArray()\r\n\r\nWill return the pagination data as an array which be used to create the pagination.\r\n\r\n\t<?php\r\n\t\r\n\tinclude \"src/Voodoo/Paginator.php\";\r\n\t\r\n\t$url = \"http://mysite.com\";\r\n\t$pagePattern = \"/page/(:num)\";\r\n\t$totalItems = 150;\r\n\t$totalPerPage = 10;\r\n\t\r\n\t$paginator = (new Voodoo\\Paginator)\r\n\t                ->setUrl($url, $pagePattern)\r\n\t                ->setItems($totalItems, $totalPerPage)\r\n\t                ->setPage(4)\r\n\t                ->setPrevNextTitle(\"Prev\",\t\"Next\")\r\n\t                ->setFirstLastTitle(\"First\", \"Last\");\r\n\t                \r\n\t $pagination = $paginator->toArray();\r\n\r\n\r\ntoArray() will return an array similar to this:\r\n\r\n\r\n\t[\r\n\t\t[\r\n\t\t\t\"page_number\" => 1,\r\n\t\t\t\"label\" => \"First\",\r\n\t\t\t\"url\" => \"http://mysite.com/pop/page/1\",\r\n\t\t\t\"is_current\" => false,\r\n\t\t\t\"is_first\" => true,                \r\n\t\t],\r\n\t\t[\r\n\t\t\t\"page_number\" => 1,\r\n\t\t\t\"label\" => \"Prev\",\r\n\t\t\t\"url\" => \"http://mysite.com/pop/page/1\",\r\n\t\t\t\"is_current\" => false,\r\n\t\t\t\"is_prev\" => true,                   \r\n\t\t],\t\r\n\t\t[\r\n\t\t\t\"page_number\" => 1,\r\n\t\t\t\"label\" => 1,\r\n\t\t\t\"url\" => \"http://mysite.com/pop/page/1\",\r\n\t\t\t\"is_current\" => true                   \r\n\t\t],\r\n\t\t[\r\n\t\t\t\"page_number\" => 2,\r\n\t\t\t\"label\" => 2,\r\n\t\t\t\"url\" => \"http://mysite.com/pop/page/2\",\r\n\t\t\t\"is_current\" => false                   \r\n\t\t],\r\n\t\t...\r\n\t\t[\r\n\t\t\t\"page_number\" => \"10\",\r\n\t\t\t\"label\" => \"Next\",\r\n\t\t\t\"url\" => \"http://mysite.com/pop/page/10\",\r\n\t\t\t\"is_current\" => false,\r\n\t\t\t\"is_next\" => true,                     \r\n\t\t],\t\r\n\t\t[\r\n\t\t\t\"page_number\" => 15,\r\n\t\t\t\"label\" => \"Last\",\r\n\t\t\t\"url\" => \"http://mysite.com/pop/page/15\",\r\n\t\t\t\"is_current\" => false,\r\n\t\t\t\"is_last\" => true,                  \r\n\t\t]\t\r\n\t]\r\n\t\r\n### Manually create the pagination with toArray()\r\n\r\n\t<ul>\r\n\t\t<?php foreach($paginator->toArray() as $page) : ?>\r\n\t\t\t<li class='<?= ($page[\"is_current\"]) ? \"active\" : \"\"; ?>'>\r\n\t\t\t\t<a href='<?= $page[\"url\"]; ?>'><?= $page[\"label\"]; ?></a>\r\n\t\t\t</li>\r\n\t\t<?php endforeach; ?>\r\n\t</ul>\r\n\r\n---\r\n\r\n####String Voodoo\\Paginator::toHtml()\r\n\r\nWill return a formatted HTML, compatible with Bootstrap framework\r\n\r\n\t<?php\r\n\t\r\n\tinclude \"src/Voodoo/Paginator.php\";\r\n\t\r\n\t$url = \"http://mysite.com\";\r\n\t$pagePattern = \"/page/(:num)\";\r\n\t$totalItems = 150;\r\n\t$totalPerPage = 10;\r\n\t\r\n\t$paginator = (new Voodoo\\Paginator)\r\n\t                ->setUrl($url, $pagePattern)\r\n\t                ->setItems($totalItems, $totalPerPage)\r\n\t                ->setPage(4)\r\n\t                ->setPrevNextTitle(\"Prev\",\t\"Next\")\r\n\t                ->setFirstLastTitle(\"First\", \"Last\");\r\n\t                \r\n\t $cssClassName = \"pagination\";\r\n\t \r\n\t echo $paginator->toHtml($cssClassName);\r\n\r\n\r\n####String Voodoo\\Paginator::__toString()\r\n\r\nSame as toHtml(), except it's when someone is echoing the paginator object\r\n\r\n\t<?php\r\n\t\r\n\tinclude \"src/Voodoo/Paginator.php\";\r\n\t\r\n\t$url = \"http://mysite.com\";\r\n\t$pagePattern = \"/page/(:num)\";\r\n\t$totalItems = 150;\r\n\t$totalPerPage = 10;\r\n\t\r\n\t$paginator = (new Voodoo\\Paginator)\r\n\t                ->setUrl($url, $pagePattern)\r\n\t                ->setItems($totalItems, $totalPerPage)\r\n\t                ->setPage(4)\r\n\t                ->setPrevNextTitle(\"Prev\",\t\"Next\")\r\n\t                ->setFirstLastTitle(\"First\", \"Last\");\r\n\t                \r\n\t echo $paginator;\r\n\r\n\r\n---\t\r\n### Getters\r\n\r\n####Voodoo\\Paginator::getUri()\r\n\r\nReturn the URI of the request (the url in the address bar).\r\nIt can be used to automatically set the url based on the request uri.\r\n\r\nIn the example below, the __construct() accepts the pagePattern and  create the pagination url from the getUri();\r\n\r\n\t<?php\r\n\t\r\n\tinclude \"src/Voodoo/Paginator.php\";\r\n\t\r\n\t$pagePattern = \"/page/(:num)\";\r\n\t$totalItems = 150;\r\n\t$totalPerPage = 10;\r\n\t\r\n\t$paginator = (new Voodoo\\Paginator);\r\n\t\r\n\t$uri = $paginator->getUri();\r\n\r\n---\r\n\r\n####Voodoo\\Paginator::getPage()\r\n\r\nGet the current page number\r\n\r\n\t<?php\r\n\t\r\n\tinclude \"src/Voodoo/Paginator.php\";\r\n\t\r\n\t$url = \"http://mysite.com/pop/page/4\";\r\n\t$pagePattern = \"/page/(:num)\";\r\n\t$totalItems = 150;\r\n\t$totalPerPage = 10;\r\n\t\r\n\t$paginator = (new Voodoo\\Paginator)\r\n\t                ->setUrl($url, $pagePattern)\r\n\t                ->setItems($totalItems, $totalPerPage)\r\n\t                ->setPrevNextTitle(\"Prev\",\t\"Next\")\r\n\t                ->setFirstLastTitle(\"First\", \"Last\");\r\n\t                \r\n\t echo $paginator->getPage(); // -> 4\r\n\r\n---\r\n\r\n####Voodoo\\Paginator::count()\r\n\r\nGet the total pages \r\n\r\n\t<?php\r\n\t\r\n\tinclude \"src/Voodoo/Paginator.php\";\r\n\t\r\n\t$url = \"http://mysite.com/pop/page/4\";\r\n\t$pagePattern = \"/page/(:num)\";\r\n\t$totalItems = 150;\r\n\t$totalPerPage = 10;\r\n\t\r\n\t$paginator = (new Voodoo\\Paginator)\r\n\t                ->setUrl($url, $pagePattern)\r\n\t                ->setItems($totalItems, $totalPerPage)\r\n\t                ->setPrevNextTitle(\"Prev\",\t\"Next\")\r\n\t                ->setFirstLastTitle(\"First\", \"Last\");\r\n\t                \r\n\t echo $paginator->count(); // 15\r\n\r\n---\r\n\r\n####Voodoo\\Paginator::getPerPage()\r\n\r\nGet total items per page\r\n\r\n\t<?php\r\n\t\r\n\tinclude \"src/Voodoo/Paginator.php\";\r\n\t\r\n\t$url = \"http://mysite.com/pop/page/4\";\r\n\t$pagePattern = \"/page/(:num)\";\r\n\t$totalItems = 150;\r\n\t$totalPerPage = 10;\r\n\t\r\n\t$paginator = (new Voodoo\\Paginator)\r\n\t                ->setUrl($url, $pagePattern)\r\n\t                ->setItems($totalItems, $totalPerPage)\r\n\t                ->setPrevNextTitle(\"Prev\",\t\"Next\")\r\n\t                ->setFirstLastTitle(\"First\", \"Last\");\r\n\t                \r\n\t echo $paginator->getPerPage(); // 10\r\n\r\n---\r\n\r\n####Voodoo\\Paginator::getStart()\r\n\r\nGet the start of the count for the pagination set\r\n\r\n\t<?php\r\n\t\r\n\tinclude \"src/Voodoo/Paginator.php\";\r\n\t\r\n\t$url = \"http://mysite.com/pop/page/4\";\r\n\t$pagePattern = \"/page/(:num)\";\r\n\t$totalItems = 150;\r\n\t$totalPerPage = 10;\r\n\t\r\n\t$paginator = (new Voodoo\\Paginator)\r\n\t                ->setUrl($url, $pagePattern)\r\n\t                ->setItems($totalItems, $totalPerPage)\r\n\t                ->setPrevNextTitle(\"Prev\",\t\"Next\")\r\n\t                ->setFirstLastTitle(\"First\", \"Last\");\r\n\t                \r\n\t echo $paginator->getStart(); // 30\r\n\r\n---\r\n\r\n####Voodoo\\Paginator::getEnd()\r\n\r\nGet the end of the count for the pagination set\r\n\r\n\t<?php\r\n\t\r\n\tinclude \"src/Voodoo/Paginator.php\";\r\n\t\r\n\t$url = \"http://mysite.com/pop/page/4\";\r\n\t$pagePattern = \"/page/(:num)\";\r\n\t$totalItems = 150;\r\n\t$totalPerPage = 10;\r\n\t\r\n\t$paginator = (new Voodoo\\Paginator)\r\n\t                ->setUrl($url, $pagePattern)\r\n\t                ->setItems($totalItems, $totalPerPage)\r\n\t                ->setPrevNextTitle(\"Prev\",\t\"Next\")\r\n\t                ->setFirstLastTitle(\"First\", \"Last\");\r\n\t                \r\n\t echo $paginator->getEnd(); // 39\r\n\r\n---\r\n\r\n####Voodoo\\Paginator::getPageUrl()\r\n\r\nReturn the page url based on the url provided \r\n\r\n\t<?php\r\n\t\r\n\tinclude \"src/Voodoo/Paginator.php\";\r\n\t\r\n\t$url = \"http://mysite.com/pop/page/4\";\r\n\t$pagePattern = \"/page/(:num)\";\r\n\t$totalItems = 150;\r\n\t$totalPerPage = 10;\r\n\t\r\n\t$paginator = (new Voodoo\\Paginator)\r\n\t                ->setUrl($url, $pagePattern)\r\n\t                ->setItems($totalItems, $totalPerPage)\r\n\t                ->setPrevNextTitle(\"Prev\",\t\"Next\")\r\n\t                ->setFirstLastTitle(\"First\", \"Last\");\r\n\t                \r\n\t echo $paginator->getPageUrl(); // http://mysite.com/pop/page/4\r\n\t \r\nAlso it can be used to get the url of any other pages\r\n\r\n\t$page6 = $paginator->getPageUrl(6); // http://mysite.com/pop/page/6\r\n\t\r\n---\r\n\r\n####Voodoo\\Paginator::getNextPageUrl()\r\n\r\nReturn the next page url\r\n\r\n\t<?php\r\n\t\r\n\tinclude \"src/Voodoo/Paginator.php\";\r\n\t\r\n\t$url = \"http://mysite.com/pop/page/4\";\r\n\t$pagePattern = \"/page/(:num)\";\r\n\t$totalItems = 150;\r\n\t$totalPerPage = 10;\r\n\t\r\n\t$paginator = (new Voodoo\\Paginator)\r\n\t                ->setUrl($url, $pagePattern)\r\n\t                ->setItems($totalItems, $totalPerPage)\r\n\t                ->setPrevNextTitle(\"Prev\",\t\"Next\")\r\n\t                ->setFirstLastTitle(\"First\", \"Last\");\r\n\t                \r\n\t echo $paginator->getNextPageUrl(); // http://mysite.com/pop/page/5\r\n\r\n---\r\n\r\n####Voodoo\\Paginator::getPrevPageUrl()\r\n\r\nReturn the previous page url\r\n\r\n\t<?php\r\n\t\r\n\tinclude \"src/Voodoo/Paginator.php\";\r\n\t\r\n\t$url = \"http://mysite.com/pop/page/4\";\r\n\t$pagePattern = \"/page/(:num)\";\r\n\t$totalItems = 150;\r\n\t$totalPerPage = 10;\r\n\t\r\n\t$paginator = (new Voodoo\\Paginator)\r\n\t                ->setUrl($url, $pagePattern)\r\n\t                ->setItems($totalItems, $totalPerPage)\r\n\t                ->setPrevNextTitle(\"Prev\",\t\"Next\")\r\n\t                ->setFirstLastTitle(\"First\", \"Last\");\r\n\t                \r\n\t echo $paginator->getPrevPageUrl(); // http://mysite.com/pop/page/3\r\n\r\n---\r\n\r\n### Using Paginator with SQL Query\r\n\r\n\t<?php\r\n\t/**\r\n\t * Using Paginator with SQL query\r\n\t * \r\n\t * We will execute two queries, one to count all entries, \r\n\t * the second one to get all the data with LIMIT and OFFSET\r\n\t */\r\n\t\r\n\tinclude(dirname(__DIR__).\"/src/Voodoo/Paginator.php\");\r\n\t\r\n\t$pdo = new PDO (\"mysql:host=$hostname;dbname=$dbname\", \"$username\", \"$pw\");\r\n\t$tableName = \"myTable\";\r\n\t\r\n\t/**\r\n\t * To count all the entries based on the criteria provided\r\n\t */\r\n\t$sth = $pdo->query(\"SELECT COUNT(id) AS count FROM {$tableName}\");\r\n\t$countResult = $sth->fetch(PDO::FETCH_ASSOC);\r\n\t\r\n\t$totalItems = $countResult[\"count\"];\r\n\t$totalPerPage = 10;\r\n\t\r\n\t/**\r\n\t * Paginator will allow us to get the LIMIT and OFFSET for the query\r\n\t */\r\n\t$url = \"http://mysite.com/pop/page/4\";\r\n\t$pagePattern = \"/page/(:num)\";\r\n\t$paginator = (new Voodoo\\Paginator)\r\n\t                ->setUrl($url, $pagePattern)\r\n\t                ->setItems($totalItems, $totalPerPage);\r\n\t\r\n\t$limit = $paginator->getPerPage();\r\n\t$offset = $paginator->getStart();\r\n\t$results = $pdo->query(\"SELECT * FROM {$tableName} LIMIT {$limit} OFFSET {$offset}\");\r\n\t\r\n\t?>\r\n\t\r\n\t<html>\r\n\t    <head>\r\n\t        <link rel=\"stylesheet\" href=\"./assets/paginator.css\">\r\n\t        <title>Paginator SQL Example</title>\r\n\t    </head>\r\n\t\r\n\t    <body>\r\n\t        <?= $paginator; ?>\r\n\t    </body>\r\n\t</html>\r\n\r\n\r\n\r\nPlease refer to the example directory for examples\r\n\r\n---\r\n\r\n(c) This Year Mardix :)\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}